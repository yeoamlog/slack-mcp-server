# Slack MCP Server 환경 변수 설정
# =====================================
# 이 파일을 .env로 복사하고 실제 값으로 수정하세요.

# =============================================================================
# 필수 설정 (Required Settings)
# =============================================================================

# Slack Bot Token (필수)
# Slack App에서 생성한 Bot User OAuth Token
# 형식: xoxb-로 시작하는 토큰
SLACK_BOT_TOKEN=xoxb-your-bot-token-here

# =============================================================================
# 선택 설정 (Optional Settings)
# =============================================================================

# Slack User Token (선택사항)
# 메시지 검색, 대용량 파일 업로드 등 고급 기능용
# 형식: xoxp-로 시작하는 토큰
# 없으면 해당 기능들이 제한됩니다.
SLACK_USER_TOKEN=xoxp-your-user-token-here

# 기본 테스트 채널 ID (선택사항)
# 파일 업로드 등의 기본 대상 채널
SLACK_TEST_CHANNEL_ID=C012UZKK3Q4R


# 기본 테스트 사용자 ID (선택사항)  
# DM 테스트용 사용자 ID
SLACK_TEST_USER_ID=U01VBHQCFME


# =============================================================================
# 서버 설정 (Server Configuration)
# =============================================================================

# MCP 서버 이름
MCP_SERVER_NAME=Slack MCP Server - Complete

# 로그 레벨 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# API 요청 설정 (API Request Settings)
# =============================================================================

# HTTP 요청 타임아웃 (초)
REQUEST_TIMEOUT=30

# 최대 재시도 횟수
MAX_RETRIES=3

# Rate limit 대기 시간 (초)
RATE_LIMIT_DELAY=1

# 지수 백오프 배수
EXPONENTIAL_BACKOFF_BASE=2

# =============================================================================
# 기본값 설정 (Default Values)
# =============================================================================

# 기본 메시지 조회 개수
DEFAULT_MESSAGE_LIMIT=10

# 기본 사용자 조회 개수
DEFAULT_USER_LIMIT=50

# =============================================================================
# 파일 업로드 제한 설정 (File Upload Limits)
# =============================================================================

# 텍스트 메시지로 전송할 최대 크기 (바이트)
TEXT_MESSAGE_LIMIT=51200

# 코드 스니펫으로 업로드할 최대 크기 (바이트)
MEDIUM_FILE_LIMIT=1048576

# 표준 파일 업로드 최대 크기 (바이트) - 무료 플랜
STANDARD_FILE_LIMIT=104857600

# 대용량 파일 업로드 최대 크기 (바이트) - 유료 플랜
LARGE_FILE_LIMIT=1073741824

# =============================================================================
# 뽀모도로 타이머 기본 시간 설정 (Pomodoro Timer Defaults)
# =============================================================================

# 수업 타이머 기본 시간 (분)
DEFAULT_STUDY_MINUTES=50

# 업무 타이머 기본 시간 (분)
DEFAULT_WORK_MINUTES=25

# 휴식 타이머 기본 시간 (분)
DEFAULT_BREAK_MINUTES=10

# 회의 타이머 기본 시간 (분)
DEFAULT_MEETING_MINUTES=30

# 사용자 정의 타이머 기본 시간 (분)
DEFAULT_CUSTOM_MINUTES=25

# =============================================================================
# UI 아이콘 설정 (UI Icon Settings)
# =============================================================================

# 사용자 타입별 아이콘
USER_ICON_OWNER=👑
USER_ICON_ADMIN=🛡️
USER_ICON_MEMBER=👤
USER_ICON_BOT=🤖
USER_ICON_GUEST_SINGLE=🎫
USER_ICON_GUEST_MULTI=👥
USER_ICON_UNKNOWN=❓

# 상태 아이콘
ICON_SUCCESS=✅
ICON_ERROR=❌
ICON_WARNING=⚠️
ICON_INFO=ℹ️

# =============================================================================
# 보안 주의사항
# =============================================================================

# ⚠️ 중요: 이 파일(.env)을 Git에 커밋하지 마세요!
# ⚠️ 실제 토큰 값을 입력한 후에는 .gitignore에 .env가 포함되어 있는지 확인하세요.
# ⚠️ 토큰을 다른 사람과 공유하지 마세요.
# ⚠️ 토큰이 노출되었다면 즉시 Slack App 설정에서 재생성하세요.

# =============================================================================
# 설정 방법
# =============================================================================

# 1. 이 파일을 .env로 복사:
#    cp .env.example .env

# 2. Slack App에서 토큰 발급:
#    - Bot Token: OAuth & Permissions > Bot User OAuth Token
#    - User Token: OAuth & Permissions > User OAuth Token (선택사항)

# 3. 필요한 스코프 추가:
#    Bot Token Scopes: channels:read, channels:history, chat:write, 
#                       im:read, im:write, im:history, users:read, reactions:write
#    User Token Scopes: search:read, files:write (선택사항)

# 4. .env 파일의 토큰 값을 실제 값으로 수정

# 5. 서버 실행:
#    python slack_mcp_server.py